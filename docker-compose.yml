version: '3.8'

volumes:
  db_storage:
  n8n_storage:
  redis_storage:
  pgvector-storage:

x-shared: &shared
  restart: always
  image: docker.n8n.io/n8nio/n8n
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_PORT=5432
    - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
    - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
    - EXECUTIONS_MODE=queue
    - QUEUE_BULL_REDIS_HOST=redis
    - QUEUE_HEALTH_CHECK_ACTIVE=true
    - N8N_ENCRYPTION_KEY=${ENCRYPTION_KEY}
    - N8N_SECURE_COOKIE=false
    - GENERIC_TIMEZONE=Asia/Makassar
    - WEBHOOK_URL=https://n8n.keithritherus.my.id
    - N8N_SMTP_HOST=smtp-mail.outlook.com
    - N8N_SMTP_PASS=0teSYqkZ3HT*QW4UGhH1
    - N8N_SMTP_PORT=587
    - N8N_SMTP_USER=support@keithritherus.my.id
    - N8N_SMTP_SSL=false
    - N8N_SMTP_SENDER=Keith Ritherus <support@n8n.keithritherus.my.id>
  links:
    - postgres
    - redis
  volumes:
    - n8n_storage:/home/node/.n8n
  depends_on:
    redis:
      condition: service_healthy
    postgres:
      condition: service_healthy
    pgvector:
      condition: service_healthy
    # qdrant:
    #   condition: service_started

services:
  postgres:
    image: postgres:16
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_NON_ROOT_USER
      - POSTGRES_NON_ROOT_PASSWORD
    ports:
      - 5432:5432
    volumes:
      - db_storage:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:6-alpine
    restart: always
    volumes:
      - redis_storage:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 10
  
  pgvector:
    image: ankane/pgvector
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB=openaivector
    ports:
      - "5433:5432"
    volumes:
      - pgvector-storage:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10
  # qdrant:
  #   image: qdrant/qdrant
  #   container_name: qdrant
  #   ports:
  #     - "6333:6333"
  #     - "6334:6334"
  #   volumes:
  #     - qdrant_storage:/qdrant/storage
  #   environment:
  #     - QDRANT__AUTH__API_KEY=your_api_key_here
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://qdrant:6333/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3

  n8n:
    <<: *shared
    ports:
      - 5678:5678

  n8n-worker:
    <<: *shared
    command: worker
    depends_on:
      - n8n

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    restart: unless-stopped
    command: tunnel --no-autoupdate run --token eyJhIjoiMzgyYmI5YTkxYjc3MTljMTk3ZWVmYzNlNzg1NmExZTQiLCJ0IjoiOTNhZWUzNTUtN2MwNy00NzVmLWJlMTItOTEwMzY1ZDg2NjlhIiwicyI6Ik1tSTFaVEkxWVRRdE1EZ3dZaTAwWTJRNUxXRTJPRGt0TXpGbFlqWTVNV00wWmpGaSJ9

